#map = affine_map<(d0) -> (d0)>
module @jit_imag.60 {
  func @main(%arg0: tensor<200xcomplex<f64>>) -> tensor<200xf64> {
    %0 = linalg.init_tensor [200] : tensor<200xf64>
    %1 = linalg.generic {indexing_maps = [#map, #map], iterator_types = ["parallel"]} ins(%arg0 : tensor<200xcomplex<f64>>) outs(%0 : tensor<200xf64>) {
    ^bb0(%arg1: complex<f64>, %arg2: f64):
      %2 = complex.im %arg1 : complex<f64>
      linalg.yield %2 : f64
    } -> tensor<200xf64>
    return %1 : tensor<200xf64>
  }
}

